{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactRequst","createAction","fetchContactSuccess","fetchContactError","addContactRequst","addContactSuccess","addContactError","deleteContactRequst","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","store","configureStore","reducer","contacts","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","Container","title","children","className","s","container","Section","section","axios","defaults","baseURL","getLoading","getContacts","getFilter","getVisibleContacts","normalizeFilter","toLowerCase","trim","contact","name","includes","ContactForm","useState","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","map","alert","post","then","data","catch","error","addContact","text","type","pattern","required","input","onChange","disabled","button","Filter","ContactList","onDeleteContact","delete","deleteContact","useEffect","get","list","item","onClick","Loading","loader","color","height","width","timeout","App","isLoadingContacts","Loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a4fa4ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1u8u4\",\"item\":\"ContactList_item__WhPD7\",\"name\":\"ContactList_name__woDUZ\",\"button\":\"ContactList_button__1ScqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__as44l\",\"title\":\"Container_title__1ZHnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1c3hw\",\"title\":\"Section_title__Qy0kM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3YVdT\",\"text\":\"Filter_text__1PqLD\",\"input\":\"Filter_input__9iN4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3iTkq\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequst = createAction('contacts/fetchContactRequst');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequst = createAction('contacts/addContactRequst');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequst = createAction('contacts/deleteContactRequst');\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/filter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequst,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequst,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequst,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequst]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequst]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequst]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactReducer from './contacts/contacts-reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <section className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequst,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequst,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequst,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://61bb7695e943920017784ed1.mockapi.io/api/v1';\r\n\r\nexport const fetchContact = () => dispatch => {\r\n  dispatch(fetchContactRequst());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, phone }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      phone,\r\n    };\r\n\r\n    dispatch(addContactRequst());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequst());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","export const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizeFilter = filter.toLowerCase().trim();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const haldleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? alert(`${name} is already in contacts.`)\r\n      : dispatch(addContact({ name, phone }));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    // <form onSubmit={haldleSubmit} autoComplete='off'>\r\n    <form onSubmit={haldleSubmit}>\r\n      <label>\r\n        <p className={s.text}>Name</p>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <p className={s.text}>Phone</p>\r\n        <input\r\n          type='tel'\r\n          name='phone'\r\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n          required\r\n          className={s.input}\r\n          value={phone}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type='submit' disabled={!name} className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        type='text'\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        className={s.input}\r\n        value={value}\r\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  fetchContact,\r\n  deleteContact,\r\n} from '../../redux/contacts/contacts-operations';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContact());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.name}>{name}:</p>\r\n          <p className={s.phone}>{phone}</p>\r\n\r\n          <button\r\n            type='button'\r\n            className={s.button}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={s.loader}>\r\n      <Loader\r\n        type='ThreeDots'\r\n        color='#00BFFF'\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useSelector } from 'react-redux';\r\nimport Container from 'components/Container';\r\nimport Section from 'components/Section';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport { getLoading } from './redux/contacts/contacts-selectors';\r\nimport Loader from 'components/Loader';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const isLoadingContacts = useSelector(getLoading);\r\n\r\n  return (\r\n    <Container title=''>\r\n      <Section title='Phonebook'>\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      {isLoadingContacts && <Loader />}\r\n\r\n      <Section title='Contacts'>\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactForm_text__1O107\",\"input\":\"ContactForm_input__2pNAI\",\"button\":\"ContactForm_button__30f_f\"};"],"sourceRoot":""}